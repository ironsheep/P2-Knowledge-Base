# Smart Pin Mode: %01010 - PWM Switch-Mode Power Supply
# Silicon Doc Reference: part4-smart-pins.txt, pages 89-90
# Layer 1: Direct Silicon Doc extraction

mode_id: "%01010"

mode_name: "PWM Switch-Mode Power Supply"

mode_group: "signal_gen"

mode_complexity: "expert"

dac_mode_dependency: false

pin_pairing: "adjacent"

wrpin_configuration:
  base_format: "%AAAA_BBBB_FFF_MMMMMMMMMMMMM_TT_SSSSS_0"
  
  a_input_selector:
    description: "4-bit A input selector - voltage detector for SMPS output"
    bit_pattern: "%AAAA"
    options:
      - code: "%0000"
        description: "this pin's read state (voltage detector input)"
        polarity: "true"
        source: "pin_read"
      - code: "%0001"
        description: "relative +1 pin's read state"
        polarity: "true"
        source: "relative_pin"
      - code: "%0010"
        description: "relative +2 pin's read state"
        polarity: "true"
        source: "relative_pin"
      - code: "%0011"
        description: "relative +3 pin's read state"
        polarity: "true"
        source: "relative_pin"
      - code: "%0100"
        description: "this pin's OUT bit from cogs"
        polarity: "true"
        source: "out_bit"
      - code: "%0101"
        description: "relative -3 pin's read state"
        polarity: "true"
        source: "relative_pin"
      - code: "%0110"
        description: "relative -2 pin's read state"
        polarity: "true"
        source: "relative_pin"
      - code: "%0111"
        description: "relative -1 pin's read state"
        polarity: "true"
        source: "relative_pin"
      - code: "%1xxx"
        description: "inverted versions of above"
        polarity: "inverted"
        source: "any"
  
  b_input_selector:
    description: "4-bit B input selector - over-current detector"
    bit_pattern: "%BBBB"
    options:
      - code: "%0000"
        description: "this pin's read state"
        polarity: "true"
        source: "pin_read"
      - code: "%0001"
        description: "relative +1 pin's read state (over-current detector)"
        polarity: "true"
        source: "relative_pin"
      - code: "%0010"
        description: "relative +2 pin's read state"
        polarity: "true"
        source: "relative_pin"
      - code: "%0011"
        description: "relative +3 pin's read state"
        polarity: "true"
        source: "relative_pin"
      - code: "%0100"
        description: "this pin's OUT bit from cogs"
        polarity: "true"
        source: "out_bit"
      - code: "%0101"
        description: "relative -3 pin's read state"
        polarity: "true"
        source: "relative_pin"
      - code: "%0110"
        description: "relative -2 pin's read state"
        polarity: "true"
        source: "relative_pin"
      - code: "%0111"
        description: "relative -1 pin's read state"
        polarity: "true"
        source: "relative_pin"
      - code: "%1xxx"
        description: "inverted versions of above"
        polarity: "inverted"
        source: "any"
  
  input_logic_filtering:
    description: "3-bit input logic/filtering - important for SMPS noise immunity"
    bit_pattern: "%FFF"
    options:
      - code: "%000"
        description: "A, B (default - no filtering)"
        operation: "passthrough"
        filter_type: "none"
      - code: "%001"
        description: "A AND B, B"
        operation: "logical_and"
        filter_type: "none"
      - code: "%010"
        description: "A OR B, B"
        operation: "logical_or"
        filter_type: "none"
      - code: "%011"
        description: "A XOR B, B"
        operation: "logical_xor"
        filter_type: "none"
      - code: "%100"
        description: "A, B, both filtered using global filt0 (12.5ns)"
        operation: "passthrough"
        filter_type: "filt0"
      - code: "%101"
        description: "A, B, both filtered using global filt1 (600ns)"
        operation: "passthrough"
        filter_type: "filt1"
      - code: "%110"
        description: "A, B, both filtered using global filt2 (16.4ms)"
        operation: "passthrough"
        filter_type: "filt2"
      - code: "%111"
        description: "A, B, both filtered using global filt3 (210ms)"
        operation: "passthrough"
        filter_type: "filt3"
  
  low_level_control:
    description: "13-bit low-level pin control (M[12:0]) - standard output configuration"
    bit_pattern: "%M............"
    special_modes:
      - condition: "M[12:10] = %100"
        behavior: "ADC mode for voltage/current sensing pins"
      - condition: "M[12:10] = %101"
        behavior: "DAC mode - not typically used with SMPS PWM"
  
  dir_out_control:
    description: "2-bit pin DIR/OUT control - OVERRIDDEN by smart pin"
    bit_pattern: "%TT"
    smart_off_behavior:
      non_dac_mode: []
      dac_mode: []
    smart_on_behavior:
      dac_modes: []
      non_dac_modes:
        - mode_range: "%01010 (PWM SMPS)"
          behavior: "Smart pin overrides OUT signal to control FET gate drive"

x_parameter:
  usage: "Base period and PWM frame period configuration"
  bit_fields:
    - range: "X[15:0]"
      purpose: "Base period in clock cycles - PWM timing resolution"
      valid_values:
        min: 1
        max: 65535
        special_values:
          - value: 100
            meaning: "100-clock base period for fine control"
          - value: 1000
            meaning: "1000-clock base period for smoother operation"
    - range: "X[31:16]"
      purpose: "PWM frame period in terms of base periods"
      valid_values:
        min: 1
        max: 65535
        special_values:
          - value: 100
            meaning: "100kHz switching with 160MHz clock and base=16"
          - value: 1000
            meaning: "Lower frequency switching for high-power applications"
  configuration_timing: "reset_only"

y_parameter:
  usage: "PWM duty cycle value with voltage feedback control"
  bit_fields:
    - range: "Y[15:0]"
      purpose: "PWM output value captured at each frame start"
      valid_values:
        min: 0
        max: 65535
        special_values:
          - value: 0
            meaning: "Minimum duty cycle (safety mode)"
          - value: "frame_period/2"
            meaning: "50% duty cycle"
          - value: "frame_period"
            meaning: "Maximum duty cycle (100%)"
  update_behavior: "Captured at frame start, modified by voltage feedback during cycle"

z_result:
  data_type: "Not used - no result data returned"
  bit_interpretation: []
  flag_behavior: "C flag may contain status information"
  overflow_handling: "Not applicable"

operation_description: |
  PWM switch-mode power supply mode overrides OUT to control the pin output state for SMPS applications
  with voltage and current feedback. X[15:0] establishes a base period and X[31:16] establishes a PWM
  frame period. Y[15:0] establishes the PWM output value captured at each frame start. A counter counts
  from one up to the frame period. The 'A' input is sampled at each base period until it reads low,
  indicating the output voltage has dropped below the regulation point. After 'A' reads low, Y[15:0]
  is captured, IN is raised, and the process repeats. At each base period, the captured output value
  is compared to the counter - if equal or greater, a high is output to drive the switching FET.
  If the 'B' input goes high at any time during the cycle (over-current detection), the output immediately
  goes low for the rest of that cycle, providing current limiting protection.

timing_specifications:
  clock_relationship: "Base period counter operates on system clock, voltage feedback controls timing"
  base_period:
    description: "Set by X[15:0] - fundamental SMPS control resolution"
    min_clocks: 1
    max_clocks: 65535
    special_values:
      - value: 16
        meaning: "10μs base periods for 100kHz switching"
      - value: 160
        meaning: "1μs base periods for high-resolution control"
  update_frequency: "PWM cycle triggered by voltage feedback (A input low)"
  settling_time: "Output responds within 1 clock to over-current protection"

in_signal_behavior:
  trigger_conditions:
    - "Voltage feedback trigger (A input reads low)"
    - "Indicates output voltage below regulation point"
    - "Y[15:0] captured and new PWM cycle begins"
  acknowledgment_method: "rdpin"
  polling_restrictions: "2-clock delay after acknowledgment before IN can be polled again"


initialization_requirement:
  critical: true
  description: "Smart pin MUST be reset before configuration"
  requirement: |
    The smart pin MUST be reset (DIR=0) before any configuration or reconfiguration.
    This ensures the smart pin is in a known state and prevents configuration conflicts.
  reset_sequence:
    pasm2: |
      DIRL  pin         ' REQUIRED: Reset smart pin (DIR=0)
      WRPIN mode, pin   ' Configure mode
      WXPIN x, pin      ' Set X parameter
      WYPIN y, pin      ' Set Y parameter
      DIRH  pin         ' Enable smart pin (DIR=1)
    spin2: |
      PINCLEAR(pin)              ' Reset pin (DIR=0, WRPIN=0)
      PINSTART(pin, mode, x, y)  ' Configure and enable
      ' OR manually:
      PINFLOAT(pin)              ' Ensure DIR=0
      WRPIN(pin, mode)           ' Set mode
      WXPIN(pin, x)              ' Set X parameter
      WYPIN(pin, y)              ' Set Y parameter
      PINHIGH(pin)               ' Enable (DIR=1)

reset_behavior:
  dir_low_effects:
    - "IN signal goes low"
    - "Output goes low (safe state)"
    - "Y[15:0] is captured for use when operation resumes"
  dir_transition_effects: "SMPS PWM begins operating with voltage/current feedback"
  wrpin_zero_effects: "Returns pin to normal mode, clears all smart pin configuration"
  reset_requirement: "ALWAYS set DIR=0 before reconfiguring the smart pin"

common_applications:
  - application: "Buck converter control"
    description: "Step-down switching power supply with feedback regulation"
    complexity_level: "expert"
  - application: "Boost converter control" 
    description: "Step-up switching power supply with current limiting"
    complexity_level: "expert"
  - application: "LED driver control"
    description: "Constant-current LED driver with over-current protection"
    complexity_level: "expert"
  - application: "Motor drive protection"
    description: "PWM motor control with current limiting"
    complexity_level: "expert"

configuration_examples:
  - name: "Basic buck converter with feedback"
    description: "Step-down converter with voltage feedback on adjacent pin"
    reset_code: "DIRL smps_pin                  ' REQUIRED: Reset before configuration"
    wrpin_code: "WRPIN ##%0111_0001_000_0100000000000_01_01010_0, smps_pin"
    wxpin_code: "WXPIN ##$0064_0010, smps_pin"
    wypin_code: "WYPIN #80, smps_pin"
    explanation: "A from -1 pin (voltage), B from +1 pin (current), frame=100, base=16, 80% max duty"
  
  - name: "Current-limited power supply"
    description: "SMPS with both voltage regulation and current limiting"
    reset_code: "DIRL protected_smps                  ' REQUIRED: Reset before configuration"
    wrpin_code: "WRPIN ##%0111_0001_101_0100000000000_01_01010_0, protected_smps"
    wxpin_code: "WXPIN ##$00C8_0020, protected_smps"
    wypin_code: "WYPIN #150, protected_smps"
    explanation: "Filtered inputs for noise immunity, frame=200, base=32, 75% max duty"
  
  - name: "High-frequency LED driver"
    description: "LED constant-current driver with over-current protection"
    reset_code: "DIRL led_driver                  ' REQUIRED: Reset before configuration"
    wrpin_code: "WRPIN ##%0000_0001_100_0100000000000_01_01010_0, led_driver"
    wxpin_code: "WXPIN ##$0032_0008, led_driver"
    wypin_code: "WYPIN #25, led_driver"
    explanation: "This pin voltage, +1 pin current sense, frame=50, base=8, 50% max duty"

typical_code_patterns:
  - pattern_name: "Regulated power supply with soft-start"
    pasm2_code: |
      ' Configure SMPS with feedback pins
      WRPIN ##%0111_0001_101_0100000000000_01_01010_0, smps_pin
      WXPIN ##$0064_0010, smps_pin       ' Frame=100, Base=16
      DIRH  smps_pin                     ' Enable SMPS
      
      ' Soft-start sequence
      MOV   duty, #10                    ' Start with low duty cycle
      
      soft_start_loop:
      WYPIN duty, smps_pin               ' Set current duty cycle
      TESTP smps_pin WC                  ' Wait for voltage feedback
      IF_NC JMP #$-1                     ' Wait for IN high
      RDPIN dummy, smps_pin              ' Acknowledge
      
      ADD   duty, #2                     ' Gradually increase
      CMP   duty, target_duty WC
      IF_C  JMP #soft_start_loop         ' Continue until target reached
      
      ' Normal regulation
      WYPIN target_duty, smps_pin        ' Set final duty cycle
    explanation: "Implement soft-start to prevent inrush current during power-up"
  
  - pattern_name: "Adaptive current limiting"
    pasm2_code: |
      ' Setup SMPS with current monitoring
      WRPIN ##%0111_0001_000_0100000000000_01_01010_0, adaptive_smps
      WXPIN ##$00C8_0020, adaptive_smps  ' Frame=200, Base=32
      DIRH  adaptive_smps                ' Enable
      
      MOV   current_duty, normal_duty    ' Start with normal duty
      MOV   overcurrent_count, #0        ' Reset protection counter
      
      regulation_loop:
      WYPIN current_duty, adaptive_smps  ' Set duty cycle
      TESTP adaptive_smps WC             ' Wait for cycle completion
      IF_NC JMP #$-1
      RDPIN dummy, adaptive_smps         ' Acknowledge
      
      ' Check if over-current occurred (could monitor B input separately)
      ' Reduce duty if over-current detected
      CMP   overcurrent_detected, #1 WZ
      IF_Z  SUB current_duty, #5         ' Reduce duty
      IF_Z  ADD overcurrent_count, #1
      IF_NZ MOV overcurrent_count, #0    ' Reset counter if no overcurrent
      
      ' Safety shutdown if too many overcurrent events
      CMP   overcurrent_count, #10 WC
      IF_NC JMP #shutdown_sequence
      
      JMP   #regulation_loop
    explanation: "Implement adaptive current limiting with protection shutdown"

related_modes:
  - mode_id: "%01000"
    relationship: "alternative"
    description: "PWM triangle - simpler PWM without feedback control"
  - mode_id: "%01001"
    relationship: "alternative"
    description: "PWM sawtooth - linear PWM without feedback control"
  - mode_id: "%11000"
    relationship: "complementary"
    description: "ADC sample/filter - can be used for voltage/current sensing"

related_instructions:
  - instruction: "WRPIN"
    usage_context: "Configure SMPS PWM with A/B input selections for voltage/current feedback"
  - instruction: "WXPIN"
    usage_context: "Set base period and PWM frame period for switching frequency"
  - instruction: "WYPIN"
    usage_context: "Set maximum duty cycle (safety limit)"
  - instruction: "DIRH"
    usage_context: "Enable SMPS operation"
  - instruction: "TESTP"
    usage_context: "Monitor for voltage regulation events"
  - instruction: "RDPIN"
    usage_context: "Acknowledge regulation cycle completion"

hardware_considerations:
  power_implications: "High-power switching applications - requires robust FET drivers and heat management"
  pin_loading_effects: "Output drives FET gates - ensure adequate gate drive current capability"
  noise_considerations: "SMPS generates significant EMI - use proper filtering and layout practices"
  thermal_effects: "Switching losses and conduction losses require thermal design consideration"

extraction_metadata:
  extraction_date: "2025-09-06"
  source_documents:
    - document: "Silicon Doc part4-smart-pins.txt"
      pages: [89, 90]
      section: "%01010 = PWM switch-mode power supply, V and I feedback"
  validation_status: "draft"
  completeness_score: 96
  technical_accuracy: "silicon_doc_verified"