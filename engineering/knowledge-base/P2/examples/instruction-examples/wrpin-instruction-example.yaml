# Example: Smart Pin Control Instruction (WRPIN)
# Demonstrates a complex instruction with multiple variants and conditional behavior

id: wrpin-instruction
mnemonic: WRPIN
category: smart-pin
syntax: "WRPIN {#}D,{#}S"
encoding: "EEEE 1100000 0LI DDDDDDDDD SSSSSSSSS"

timing:
  cycles: "2-9"
  conditions: "2 cycles + 0..7 for hub sync alignment"
  hub_sync: true
  pipeline_effects: "Stalls until hub window available"

description: |
  Writes smart pin configuration to pin S or pins S[5:0]+A[5:0].
  This instruction configures smart pin modes, establishing the operational
  behavior of P2's autonomous I/O processing system. The configuration
  value D contains mode bits, digital/analog settings, and various
  control parameters that define how the smart pin will operate.

operation: "PIN[S].CONFIG := D; Wait for hub window"

usage_notes: |
  WRPIN is the primary configuration instruction for smart pins:
  - Must be executed before smart pin activation
  - Configuration persists until changed or reset
  - Hub synchronization ensures atomic update
  - Use WXPIN/WYPIN for parameter configuration after mode set

special_cases:
  - condition: "Writing to multiple pins (A field non-zero)"
    behavior: "Updates range S[5:0] through S[5:0]+A[5:0]"
  - condition: "Pin already active"
    behavior: "Configuration takes effect on next DIR rise"
  - condition: "Invalid pin number (>63)"
    behavior: "Wraps modulo 64"

affects_flags:
  c: false
  z: false

variants:
  - form: "immediate-both"
    syntax: "WRPIN #config, #pin"
    encoding: "EEEE 1100000 011 config[8:0] pin[8:0]"
    timing:
      cycles: 2
    description: "Both operands are 9-bit immediates"
    
  - form: "register-both"
    syntax: "WRPIN config_reg, pin_reg"
    encoding: "EEEE 1100000 000 DDDDDDDDD SSSSSSSSS"
    timing:
      cycles: "2-9"
    description: "Both operands from registers"
    
  - form: "mixed-mode"
    syntax: "WRPIN #config, pin_reg"
    encoding: "EEEE 1100000 010 config[8:0] SSSSSSSSS"
    timing:
      cycles: "2-9"
    description: "Immediate config, register pin"

examples:
  - code: |
      WRPIN ##%0000_0000_000_0000000000000_00_00000_0, #16
    explanation: "Disable smart pin mode on pin 16"
    context: "Reset pin to normal GPIO"
    result: "Pin 16 smart pin disabled"
    
  - code: |
      WRPIN ##%0001_0001_000_0000000000000_00_11111_0, #8
    explanation: "Configure pin 8 for PWM sawtooth mode"
    context: "PWM output setup"
    result: "Pin 8 ready for PWM after DIR set high"
    
  - code: |
      MOV config, ##%0011_0011_000_0000000000000_00_01100_0
      WRPIN config, pin_num
    explanation: "Configure variable pin for quadrature encoder"
    context: "Dynamic pin assignment"
    result: "Selected pin configured for quadrature mode"

related_instructions: ["WXPIN", "WYPIN", "RDPIN", "AKPIN", "RQPIN"]
see_also: ["Smart Pin Modes", "P2 I/O Configuration"]

conditions:
  - if: "Hub window not aligned"
    then: "Wait 0-7 additional cycles"
    cycles: "2-9"
  - if: "Pin number > 63"
    then: "Pin number wraps (pin & $3F)"
    cycles: 2

source_layers:
  csv: true
  datasheet: true
  silicon_doc: true
  forum_clarification: true

source_references:
  - document: "P2-Instruction-Set.csv"
    section: "Smart Pin Instructions"
    page: 15
    notes: "Base definition and encoding variants"
  - document: "P2-Datasheet-v35"
    section: "6.4.3"
    page: 89
    notes: "Hub synchronization timing"
  - document: "Silicon-Doc-v35-Part4"
    section: "Smart Pin Operations"
    page: 234
    notes: "Comprehensive mode descriptions"
  - document: "Forum-2024-03-15"
    section: "Chip's clarification on hub timing"
    notes: "Exact cycle count depends on eggbeater position"

completeness_score: 8
verification_status: chip-verified
confidence_level: authoritative

extraction_date: "2025-01-06"
last_updated: "2025-01-06T10:50:00Z"
last_verified: "2025-01-06"
schema_version: "1.0.0"

update_history:
  - date: "2025-01-06T10:50:00Z"
    changes: "Complete extraction with forum clarifications"
    source: "Full 4-layer aggregation"