instruction: MUXQ
syntax: MUXQ    D,{#}S
encoding: EEEE 1001111 10I DDDDDDDDD SSSSSSSSS
timing:
  cycles: 2
  type: fixed
group: Math and Logic
description: |
  MUXQ copies all bits from Src corresponding to high (1) bits of Q into the corresponding
  bits of Dest. All other bits remain unchanged.
  
  Critical for parallel bit operations, especially RGB LED driving where
  multiple data lines need simultaneous updates.
category: Bit Operation Instruction - Set discrete bits of a value to that of another.
flags_affected:
  C:
    when: D
parameters:
- Dest is a register whose bits will be updated according to Q and Src.
- Src is a register, 9-bit literal, or 32-bit augmented literal whose select bits will replace the corresponding
  bits in Dest.
documentation_source: enhanced
documentation_level: comprehensive
examples:
  - name: HUB75 Parallel RGB Output
    description: Drive 6 RGB data lines simultaneously
    code: |
      ' HUB75 RGB panel driver - output 6 parallel RGB bits
      ' Q register holds mask for RGB pins
      rgb_output
              setq    rgb_mask         ' Set pin mask in Q
              muxq    outa, rgb_data   ' Update RGB pins atomically
              drvh    clk_pin          ' Clock high
              waitx   #2               ' Hold time
              drvl    clk_pin          ' Clock low
              ret
              
      rgb_mask long   %00111111_00000000  ' Pins 16-21 for RGB
      rgb_data long   0                   ' Current RGB values
    source: hub75_driver
    
  - name: Masked Bit Update
    description: Update specific bits without affecting others
    code: |
      ' Update only certain bits based on mask
              mov     q, update_mask   ' Load mask to Q
              muxq    status, new_bits ' Update masked bits
              
      ' Example: Update bits 4-7 only
              setq    #$F0             ' Mask for bits 4-7
              muxq    config, #$50     ' Set bits 4-7 to $5
    source: common_pattern
    
  - name: SETQ Block Operation Modifier
    description: SETQ + MUXQ for masked merge
    code: |
      ' Masked merge operation
              setq    mask             ' Load mask
              muxq    dest, source     ' dest = (dest & !mask) | (source & mask)
              
      ' This is atomic and faster than:
      ' andn dest, mask
      ' and  temp, source, mask  
      ' or   dest, temp
    source: optimization_pattern
    
  - name: Multi-Pin State Update
    description: Update multiple pin states simultaneously
    code: |
      ' Update LED states on multiple pins
              mov     q, led_mask      ' Which LEDs to update
              muxq    outa, led_states ' Update LED pins
              
      led_mask   long   %11110000_00000000_00000000  ' LEDs on pins 24-27
      led_states long   %10100000_00000000_00000000  ' Pattern to display
    source: parallel_io
    
related_instructions:
  - SETQ: Set Q register for block operations
  - MUXC: Mux C flag into destination
  - MUXZ: Mux Z flag into destination
  - MUXNC: Mux NOT C flag into destination
  - MUXNZ: Mux NOT Z flag into destination
  
notes:
  - Q register must be set before MUXQ
  - Atomic operation for parallel bit updates
  - Essential for HUB75 RGB panel driving
  - More efficient than AND/OR sequences