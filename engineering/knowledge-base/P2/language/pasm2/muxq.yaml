instruction: MUXQ
syntax: MUXQ    D,{#}S
encoding: EEEE 1001111 10I DDDDDDDDD SSSSSSSSS
timing:
  cycles: 2
  type: fixed
group: Math and Logic
description: 'MUXQ copies all bits from Src corresponding to high (1) bits of Q into
  the corresponding

  bits of Dest. All other bits remain unchanged.


  Critical for parallel bit operations, especially RGB LED driving where

  multiple data lines need simultaneous updates.

  '
category: Bit Operation Instruction - Set discrete bits of a value to that of another.
flags_affected:
  C:
    when: D
parameters:
- Dest is a register whose bits will be updated according to Q and Src.
- Src is a register, 9-bit literal, or 32-bit augmented literal whose select bits
  will replace the corresponding bits in Dest.
documentation_source: enhanced
documentation_level: comprehensive
examples:
- name: HUB75 Parallel RGB Output
  description: Drive 6 RGB data lines simultaneously
  code: "' HUB75 RGB panel driver - output 6 parallel RGB bits\n' Q register holds\
    \ mask for RGB pins\nrgb_output\n        setq    rgb_mask         ' Set pin mask\
    \ in Q\n        muxq    outa, rgb_data   ' Update RGB pins atomically\n      \
    \  drvh    clk_pin          ' Clock high\n        waitx   #2               ' Hold\
    \ time\n        drvl    clk_pin          ' Clock low\n        ret\n        \n\
    rgb_mask long   %00111111_00000000  ' Pins 16-21 for RGB\nrgb_data long   0  \
    \                 ' Current RGB values\n"
  source: hub75_driver
- name: Masked Bit Update
  description: Update specific bits without affecting others
  code: "' Update only certain bits based on mask\n        mov     q, update_mask\
    \   ' Load mask to Q\n        muxq    status, new_bits ' Update masked bits\n\
    \        \n' Example: Update bits 4-7 only\n        setq    #$F0             '\
    \ Mask for bits 4-7\n        muxq    config, #$50     ' Set bits 4-7 to $5\n"
  source: common_pattern
- name: SETQ Block Operation Modifier
  description: SETQ + MUXQ for masked merge
  code: "' Masked merge operation\n        setq    mask             ' Load mask\n\
    \        muxq    dest, source     ' dest = (dest & !mask) | (source & mask)\n\
    \        \n' This is atomic and faster than:\n' andn dest, mask\n' and  temp,\
    \ source, mask  \n' or   dest, temp\n"
  source: optimization_pattern
- name: Multi-Pin State Update
  description: Update multiple pin states simultaneously
  code: "' Update LED states on multiple pins\n        mov     q, led_mask      '\
    \ Which LEDs to update\n        muxq    outa, led_states ' Update LED pins\n \
    \       \nled_mask   long   %11110000_00000000_00000000  ' LEDs on pins 24-27\n\
    led_states long   %10100000_00000000_00000000  ' Pattern to display\n"
  source: parallel_io
related_instructions:
- SETQ: Set Q register for block operations
- MUXC: Mux C flag into destination
- MUXZ: Mux Z flag into destination
- MUXNC: Mux NOT C flag into destination
- MUXNZ: Mux NOT Z flag into destination
notes:
- Q register must be set before MUXQ
- Atomic operation for parallel bit updates
- Essential for HUB75 RGB panel driving
- More efficient than AND/OR sequences
compiler_operand_format:
  name: operand_ds
  pattern: D,S/#
  description: Destination register, Source register or immediate value
  valueType: 0
compiler_encoding:
  operandFormat: 0
enhancement_source: PNUT_TS_v2.0_complete_operand_integration_2025-09-13
