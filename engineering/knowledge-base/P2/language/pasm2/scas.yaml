instruction: SCAS
syntax: SCAS Dest, {#}Src {WZ}
encoding: "EEEE 1010001 1ZI DDDDDDDDD SSSSSSSSS                      \u2014                 \u2014   \
  \       Product = 0                2"
timing:
  cycles: 2
  type: fixed
group: Math Instruction - Create signed 18-bit scale value for next instruction's S value.
description: "SCAS multiplies the lower, signed 16-bits of each of Dest and Src together, right shifts\
  \ the 32-bit product by 14 (to Result: The upper 18 bits of the signed product from the 16-bit Dest\
  \ and Src multiplication is substituted as the next instruction's Src value and optionally the Z flag\
  \ is updated to the zero status.\n\nSCAS multiplies the lower, signed 16-bits of each of Dest and Src\
  \ together, right shifts the 32-bit product by 14 (to\n\nscale down the result), and substitutes this\
  \ value as the next instruction's Src value.\n\nIf the WZ effect is speci\uFB01ed, the Z \uFB02ag is\
  \ set (1) if the product (before scaling down) is zero, or is cleared (0) if\n\nnon-zero."
parameters:
- Dest is a register containing the signed 16-bit value to multiply with Src.
- Src is a register, 9-bit literal, or signed 16-bit augmented literal whose value is multiplied with
  Dest.
- "WZ is an optional effect to update the Z \uFB02ag."
related:
- SCA
documentation_source: PASM2 Manual 2022/11/01 Pages 31-147
documentation_level: comprehensive
compiler_operand_format:
  name: operand_ds
  pattern: D,S/#
  description: Destination register, Source register or immediate value
  valueType: 0
compiler_encoding:
  operandFormat: 0
enhancement_source: PNUT_TS_v2.0_complete_operand_integration_2025-09-13
last_updated: '2025-09-19'
brief_description: Scale, signed
category: Math Instruction - Create signed 18-bit scale value for next instruction's S value.
result: The upper 18 bits of the signed product from the 16-bit Dest and Src multiplication is substituted
  as the
syntax_variants:
- SCAS Dest, {#}Src {WZ}
- SCAS multiplies the lower, signed 16-bits of each of Dest and Src together, right shifts the 32-bit
  product by 14 (to
manual_extraction_date: '2025-01-19'
