instruction: SETR
syntax: SETR Dest, {#}Src
encoding: "EEEE 1001101 01I DDDDDDDDD SSSSSSSSS                        D                  \u2014     \
  \              \u2014                     2"
timing:
  cycles: 2
  type: fixed
group: Indirection Instruction - Set template Result field for ALTI.
description: "SETR copies Src[8:0] to the Result field of the template, Dest, to be used with an ALTI\
  \ instruction. Bits outside the Result: The Result field [27:19] of template Dest is set to Src[8:0].\n\
  \nSETR copies Src[8:0] to the Result \uFB01eld of the template, Dest, to be used with an ALTI instruction.\
  \ Bits outside the\n\nResult \uFB01eld remain unaffected. The Result \uFB01eld does not exist in instruction\
  \ opcodes, but takes its value from the\n\nDest \uFB01eld, holding the address of a register for the\
  \ instruction to use as its result destination upon execution.\n\nThe ALTI template is a 32-bit value\
  \ with the following format:\n\nBits             31:28 (4 bits)          27:19 (9 bits)            18\
  \              17:9 (9 bits)           8:0 (9 bits)\n\nField Description       Condition Field     \
  \    Result Field       Indirect \"I\" Field    Dest \"D\" Field         Source \"S\" Field\n\nSETR\
  \ can also be used in self-modifying Reg RAM code, though it won't affect the Register \uFB01eld (which\
  \ doesn't\n\nexist in instruction opcodes) but rather will affect the Instr \uFB01eld and the upper\
  \ two bits of the FX \uFB01eld. Unlike with\n\nALTx instructions, when used this way, \uFB01eld value\
  \ modi\uFB01cation occurs in the program code itself (not the\n\ninstruction pipeline); code is altered,\
  \ values persist. Due to the instruction pipeline nature, after modifying a code\n\nregister, it is\
  \ necessary to elapse at least two instructions before executing the modi\uFB01ed register.\n\nSETR\
  \          inst, op                        'set \"inst\" register[27:19] to op[8:0]\n\nNOP         \
  \                                  '\uFB01rst spacer instruction, could be anything\n\nNOP         \
  \                                  'second spacer instruction, could be anything\n\ninst     MOV   \
  \        x, y                            'operate on x using y; MOV can become AND/OR/etc. per SETR"
flags_affected:
  C:
    when: D
parameters:
- Dest is the register whose 32-bit value is a template for use with an ALTI instruction.
- "Src is a register or 9-bit literal whose value (Src[8:0]) is copied to the D \uFB01eld of Dest."
related:
- SETD
- SETS
- ALTI
documentation_source: PASM2 Manual 2022/11/01 Pages 31-147
documentation_level: comprehensive
compiler_operand_format:
  name: operand_ds
  pattern: D,S/#
  description: Destination register, Source register or immediate value
  valueType: 0
compiler_encoding:
  operandFormat: 0
enhancement_source: PNUT_TS_v2.0_complete_operand_integration_2025-09-13
last_updated: '2025-09-19'
brief_description: Set result
category: "Indirection Instruction - Set template Result \uFB01eld for ALTI."
result: "The Result \uFB01eld [27:19] of template Dest is set to Src[8:0]."
syntax_variants:
- SETR Dest, {#}Src
- "SETR copies Src[8:0] to the Result \uFB01eld of the template, Dest, to be used with an ALTI instruction.\
  \ Bits outside the"
- SETR          inst, op                        'set "inst" register[27:19] to op[8:0]
manual_extraction_date: '2025-01-19'
