instruction: MULS
syntax: MULS Dest, {#}Src {WZ}
encoding:
- "EEEE 1010000 1ZI DDDDDDDDD SSSSSSSSS                   D                 \u2014            (D = 0)\
  \ | (S = 0)              2"
- EEEE 0101100 CZI DDDDDDDDD SSSSSSSSS                   D          Parity of Result      Result = 0                   2
- EEEE 0101101 CZI DDDDDDDDD SSSSSSSSS                   D          Parity of Result      Result = 0                   2
timing:
  cycles: 2
  type: fixed
group: Math Instruction - Multiply signed 16-bit x 16-bit values.
description: "MULS multiplies the signed lower 16-bits of each of Dest and Src together and stores the\
  \ 32-bit signed product Result: The 32-bit signed product of the signed 16-bit Dest and Src multiplication\
  \ is stored into Dest and optionally the Z flag is updated to the Dest or Src zero status. D = signed\
  \ (D[15:0] * S[15:0]).\n\nMULS multiplies the signed lower 16-bits of each of Dest and Src together\
  \ and stores the 32-bit signed product\n\nresult into the Dest register. This is a fast (2-clock) signed\
  \ 16 x 16 bit multiplication operation\u2014 to multiply larger\n\nfactors, use the CORDIC Solver QMUL\
  \ instruction.\n\nIf the WZ effect is speci\uFB01ed, the Z \uFB02ag is set (1) if either the Dest or\
  \ Src values are zero, or is cleared (0) if both are\n\nnon-zero.\n\nMUXC / MUXNC\n\nMux C or mux not\
  \ C\n\nBit Operation Instructions - Set discrete bits to C or !C\n\nMUXC    Dest, {#}Src {WC|WZ|WCZ}\n\
  \nMUXNC Dest, {#}Src {WC|WZ|WCZ}\n\nResult: Dest bit(s) described by Src are set to C or !C; the rest\
  \ are left as-is. Flags are optionally updated with\n\nparity and zero status of the result.\n\n\u25CF\
  \   Dest is the register whose value will have one or more bits set to C or !C.\n\n\u25CF   Src is a\
  \ register, 9-bit literal, or 32-bit augmented literal whose value identi\uFB01es the bit(s) to modify.\n\
  \n\u25CF   WC, WZ, or WCZ is an optional effect to update \uFB02ags.\n\nCOND INSTR         FX     DEST\
  \          SRC           Write            C Flag              Z Flag                Clocks\n\nEEEE 0101100\
  \ CZI DDDDDDDDD SSSSSSSSS                   D          Parity of Result      Result = 0            \
  \       2\n\nEEEE 0101101 CZI DDDDDDDDD SSSSSSSSS                   D          Parity of Result    \
  \  Result = 0                   2\n\nMUXC or MUXNC alters the Dest bit(s) designated by Src (high bits)\
  \ to equal the state, or inverse state, of the C \uFB02ag.\n\nAll Dest bits corresponding to high (1)\
  \ bits in Src are modi\uFB01ed; all other Dest bits are left unchanged.\n\nIf the WC or WCZ effect is\
  \ speci\uFB01ed, the C \uFB02ag is set (1) if the number of high (1) bits in the result is odd, or is\n\
  \ncleared (0) if it is even.\n\nIf the WZ or WCZ effect is speci\uFB01ed, the Z \uFB02ag is set (1)\
  \ if the result is zero, or is cleared (0) if it is not zero."
flags_affected:
  Z: Result = 0
parameters:
- Dest is a register containing the signed 16-bit value to multiply with Src, and is where the result
  is written.
- Src is a register, 9-bit literal, or signed 16-bit augmented literal whose value is multiplied into
  Dest.
- "WZ is an optional effect to update the Z \uFB02ag."
- Dest is the register whose value will have one or more bits set to C or !C.
- "Src is a register, 9-bit literal, or 32-bit augmented literal whose value identi\uFB01es the bit(s)\
  \ to modify."
- "WC, WZ, or WCZ is an optional effect to update \uFB02ags."
related:
- MUL
- SCA
- QMUL
documentation_source: PASM2 Manual 2022/11/01 Pages 31-147
documentation_level: comprehensive
compiler_operand_format:
  name: operand_ds
  pattern: D,S/#
  description: Destination register, Source register or immediate value
  valueType: 0
compiler_encoding:
  operandFormat: 0
enhancement_source: PNUT_TS_v2.0_complete_operand_integration_2025-09-13
last_updated: '2025-09-19'
brief_description: Multiply, signed
category: Math Instruction - Multiply signed 16-bit x 16-bit values.
result: Dest bit(s) described by Src are set to C or !C; the rest are left as-is. Flags are optionally
  updated with
syntax_variants:
- MULS Dest, {#}Src {WZ}
- MULS multiplies the signed lower 16-bits of each of Dest and Src together and stores the 32-bit signed
  product
manual_extraction_date: '2025-01-19'
