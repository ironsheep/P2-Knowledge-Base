# Code Example: Button Reading with INA Register
# Extracted from Smart Pins Tutorial

example_id: "smart-pins-002-button-reading"
title: "Reading Button Input with INA Register"
description: "Demonstrates how to read digital input from a button using the INA register and proper pin configuration"

source_metadata:
  source_document: "P2-Smart-Pins-Green-Book-Tutorial.md"
  source_section: "Chapter 0: P2 I/O Fundamentals - Reading Inputs"
  source_page: null
  extraction_context: "Following basic output control, showing input reading fundamentals"
  extraction_date: "2025-09-07"

code_content:
  language: "spin2"
  code_type: "complete_program"
  code: |
    CON
      BUTTON = 32                   ' Button on P32

    PUB read_button()
      DIRL #BUTTON                  ' Make button pin an input
      if INA[BUTTON]                ' Read the input state
        ' Button is pressed (high)
        ' Add your code here
      else
        ' Button is not pressed (low)
        ' Add your code here
  code_comments:
    - line_number: 2
      comment: "BUTTON = 32"
      explanation: "Defines constant for button pin number (P32)"
    - line_number: 5
      comment: "DIRL #BUTTON"
      explanation: "Configure button pin as input (high impedance)"
    - line_number: 6
      comment: "if INA[BUTTON]"
      explanation: "Read current state of button pin from INA register"

technical_analysis:
  instructions_used:
    - "DIRL"
    - "INA"
  features_demonstrated:
    - "Pin input configuration"
    - "Digital input reading"
    - "INA register usage"
    - "Conditional logic based on input"
  programming_patterns:
    - "Input polling"
    - "Pin state testing"
  difficulty_level: "beginner"
  complexity_score: 3

application_context:
  domain: "general"
  use_case: "User interface, button detection, digital sensor reading"
  hardware_requirements:
    - "P2 microcontroller"
    - "Button or switch connected to pin 32"
    - "Pull-up or pull-down resistor as needed"

validation_status:
  syntax_validated: true
  syntax_validation_date: "2025-09-07"
  compilation_result: "success"
  validation_notes: "Standard Spin2 input reading pattern"
  hardware_tested: false
  test_platform: null

cross_references:
  related_instructions:
    - "/engineering/knowledge-base/P2/instructions/DIRL.yaml"
    - "/engineering/knowledge-base/P2/instructions/INA.yaml"
  related_examples:
    - "smart-pins-001-basic-io"
    - "smart-pins-003-multiple-inputs"
  see_also:
    - "INA register documentation"
    - "P2 input handling"
  builds_upon:
    - "smart-pins-001-basic-io"

quality_metrics:
  completeness_score: 7
  clarity_score: 8
  educational_value: 9
  authority_level: "official"

extraction_metadata:
  extractor_version: "1.0.0"
  extraction_method: "manual"
  extracted_by: "Claude"
  review_status: "unreviewed"
  update_history:
    - date: "2025-09-07T16:35:00Z"
      changes: "Initial extraction from Smart Pins tutorial"
      updated_by: "Claude"

integration_targets:
  instruction_database: true
  tutorial_integration: true
  reference_documentation: true
  automated_testing: true