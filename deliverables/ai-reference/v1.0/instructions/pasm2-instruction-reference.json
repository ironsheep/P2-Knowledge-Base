{
  "$schema": "../schemas/pasm2-schema.json",
  "metadata": {
    "title": "PASM2 Instruction Reference",
    "version": "1.0.0",
    "totalInstructions": 491,
    "description": "Complete reference for Parallax Propeller 2 PASM2 assembly instructions",
    "lastUpdated": "2025-08-15",
    "trustLevel": "verified"
  },
  "instructions": [
    {
      "name": "ADD",
      "category": "arithmetic",
      "description": "Add source to destination",
      "syntax": ["ADD D,S", "ADD D,#S"],
      "parameters": {
        "dest": {
          "required": true,
          "type": "register",
          "range": "$000-$1FF",
          "description": "Destination register"
        },
        "source": {
          "required": true,
          "type": "any",
          "range": "$000-$1FF or 20-bit immediate",
          "description": "Source register or immediate value"
        }
      },
      "encoding": {
        "opcode": "1000100000IIIIIIDDDDDDDDSSSSSSSSS",
        "fields": {
          "INSTR": "10001000",
          "CZ": "00",
          "I": "bit 18",
          "DEST": "bits 17-9",
          "SRC": "bits 8-0"
        }
      },
      "timing": {
        "cogRam": 2,
        "lutRam": 2,
        "hubRam": 8,
        "notes": "Add 6 clocks if hub window missed"
      },
      "flags": {
        "affects": ["C", "Z"],
        "optional": true
      },
      "conditions": {
        "supported": true,
        "codes": ["IF_C", "IF_NC", "IF_Z", "IF_NZ", "IF_C_EQ_Z", "IF_C_NE_Z", "IF_C_AND_Z", "IF_C_OR_Z"]
      },
      "examples": [
        {
          "code": "ADD x, y",
          "description": "Add register y to register x",
          "registers": {"x": "$100", "y": "$101"}
        },
        {
          "code": "ADD total, #1",
          "description": "Increment total by 1",
          "registers": {"total": "$102"}
        }
      ],
      "notes": [
        "Carry flag set if result overflows 32 bits",
        "Zero flag set if result is zero",
        "Can be conditional with IF_ prefixes"
      ],
      "trustLevel": "verified",
      "sourceRefs": [
        {
          "document": "P2 Instructions v35",
          "page": "12"
        }
      ]
    },
    {
      "name": "MOV",
      "category": "logic",
      "description": "Move source to destination",
      "syntax": ["MOV D,S", "MOV D,#S"],
      "parameters": {
        "dest": {
          "required": true,
          "type": "register",
          "range": "$000-$1FF",
          "description": "Destination register"
        },
        "source": {
          "required": true,
          "type": "any",
          "range": "$000-$1FF or 20-bit immediate",
          "description": "Source register or immediate value"
        }
      },
      "encoding": {
        "opcode": "1010000000IIIIIIDDDDDDDDSSSSSSSSS",
        "fields": {
          "INSTR": "10100000",
          "CZ": "00",
          "I": "bit 18",
          "DEST": "bits 17-9",
          "SRC": "bits 8-0"
        }
      },
      "timing": {
        "cogRam": 2,
        "lutRam": 2,
        "hubRam": 8
      },
      "flags": {
        "affects": ["Z"],
        "optional": true
      },
      "conditions": {
        "supported": true,
        "codes": ["IF_C", "IF_NC", "IF_Z", "IF_NZ", "IF_C_EQ_Z", "IF_C_NE_Z", "IF_C_AND_Z", "IF_C_OR_Z"]
      },
      "examples": [
        {
          "code": "MOV x, y",
          "description": "Copy register y to register x",
          "registers": {"x": "$100", "y": "$101"}
        },
        {
          "code": "MOV result, #0",
          "description": "Clear result register",
          "registers": {"result": "$102"}
        }
      ],
      "trustLevel": "verified",
      "sourceRefs": [
        {
          "document": "P2 Instructions v35",
          "page": "45"
        }
      ]
    },
    {
      "name": "JMP",
      "category": "branch-jump",
      "description": "Jump to address",
      "syntax": ["JMP #A", "JMP D"],
      "parameters": {
        "dest": {
          "required": true,
          "type": "address",
          "range": "$000-$1FF or 20-bit immediate",
          "description": "Target address"
        }
      },
      "encoding": {
        "opcode": "1101011100IIIIIIDDDDDDDDSSSSSSSSS",
        "fields": {
          "INSTR": "11010111",
          "CZ": "00",
          "I": "bit 18",
          "DEST": "bits 17-9",
          "SRC": "000000000"
        }
      },
      "timing": {
        "cogRam": 2,
        "lutRam": 2,
        "hubRam": 8,
        "notes": "Plus pipeline refill time"
      },
      "flags": {
        "affects": ["none"],
        "optional": false
      },
      "conditions": {
        "supported": true,
        "codes": ["IF_C", "IF_NC", "IF_Z", "IF_NZ", "IF_C_EQ_Z", "IF_C_NE_Z", "IF_C_AND_Z", "IF_C_OR_Z"]
      },
      "examples": [
        {
          "code": "JMP #loop",
          "description": "Jump to label 'loop'",
          "registers": {}
        },
        {
          "code": "IF_Z JMP #done",
          "description": "Jump to 'done' if zero flag set",
          "registers": {}
        }
      ],
      "notes": [
        "Unconditional jump changes program counter",
        "Pipeline is refilled, adding execution delay",
        "Can be conditional with IF_ prefixes"
      ],
      "trustLevel": "verified",
      "sourceRefs": [
        {
          "document": "P2 Instructions v35",
          "page": "78"
        }
      ]
    },
    {
      "name": "WRPIN",
      "category": "smart-pins",
      "description": "Write pin configuration",
      "syntax": ["WRPIN D,#S", "WRPIN D,S"],
      "parameters": {
        "dest": {
          "required": true,
          "type": "register",
          "range": "$000-$1FF",
          "description": "Pin number (0-63)"
        },
        "source": {
          "required": true,
          "type": "any",
          "range": "32-bit configuration value",
          "description": "Smart pin configuration"
        }
      },
      "encoding": {
        "opcode": "1100000001IIIIIIDDDDDDDDSSSSSSSSS",
        "fields": {
          "INSTR": "11000000",
          "CZ": "01",
          "I": "bit 18",
          "DEST": "bits 17-9",
          "SRC": "bits 8-0"
        }
      },
      "timing": {
        "cogRam": 2,
        "lutRam": 2,
        "hubRam": 8
      },
      "flags": {
        "affects": ["none"],
        "optional": false
      },
      "conditions": {
        "supported": true,
        "codes": ["IF_C", "IF_NC", "IF_Z", "IF_NZ", "IF_C_EQ_Z", "IF_C_NE_Z", "IF_C_AND_Z", "IF_C_OR_Z"]
      },
      "examples": [
        {
          "code": "WRPIN pin, #%0000_1010_000_00000000000000_00_00000",
          "description": "Configure pin as serial transmitter",
          "registers": {"pin": "$020"}
        }
      ],
      "notes": [
        "Configures smart pin mode and parameters",
        "Pin must be set as output in DIR register",
        "Configuration takes effect immediately"
      ],
      "trustLevel": "verified",
      "sourceRefs": [
        {
          "document": "P2 Instructions v35",
          "page": "156"
        }
      ]
    },
    {
      "name": "RDLONG",
      "category": "hub-memory",
      "description": "Read long from hub memory",
      "syntax": ["RDLONG D,S", "RDLONG D,#S"],
      "parameters": {
        "dest": {
          "required": true,
          "type": "register",
          "range": "$000-$1FF",
          "description": "Destination register"
        },
        "source": {
          "required": true,
          "type": "any",
          "range": "Hub address 0-$7FFFF",
          "description": "Hub memory address"
        }
      },
      "encoding": {
        "opcode": "1010101001IIIIIIDDDDDDDDSSSSSSSSS",
        "fields": {
          "INSTR": "10101010",
          "CZ": "01",
          "I": "bit 18",
          "DEST": "bits 17-9",
          "SRC": "bits 8-0"
        }
      },
      "timing": {
        "cogRam": 2,
        "lutRam": 2,
        "hubRam": 8,
        "notes": "Wait for hub window if necessary"
      },
      "flags": {
        "affects": ["none"],
        "optional": false
      },
      "conditions": {
        "supported": true,
        "codes": ["IF_C", "IF_NC", "IF_Z", "IF_NZ", "IF_C_EQ_Z", "IF_C_NE_Z", "IF_C_AND_Z", "IF_C_OR_Z"]
      },
      "examples": [
        {
          "code": "RDLONG data, hubaddr",
          "description": "Read 32-bit value from hub memory",
          "registers": {"data": "$100", "hubaddr": "$101"}
        }
      ],
      "notes": [
        "Reads 32-bit aligned data from hub memory",
        "Address should be long-aligned (multiple of 4)",
        "COG waits for its hub window slot"
      ],
      "trustLevel": "verified",
      "sourceRefs": [
        {
          "document": "P2 Instructions v35",
          "page": "134"
        }
      ]
    }
  ],
  "categories": {
    "arithmetic": {
      "description": "Mathematical operations",
      "instructions": ["ADD", "SUB", "MUL", "DIV", "MULS", "SCA", "SCAS", "ADDX", "SUBX", "ADDS", "SUBS", "ADDSX", "SUBSX", "CMPS", "CMPR", "CMPM", "CMPX", "CMPSX"],
      "count": 18
    },
    "logic": {
      "description": "Logical and data movement operations", 
      "instructions": ["MOV", "AND", "OR", "XOR", "NOT", "ANDN", "ORN", "XORN", "NOTS", "ONES", "TEST", "TESTN"],
      "count": 12
    },
    "bitwise": {
      "description": "Bit manipulation operations",
      "instructions": ["TESTB", "BITL", "BITH", "BITC", "BITNC", "BITZ", "BITNZ", "BITRND", "BITNOT", "ENCOD", "DECOD", "BMASK", "CRCBIT", "CRCNIB"],
      "count": 14
    },
    "shift-rotate": {
      "description": "Shift and rotate operations", 
      "instructions": ["ROR", "ROL", "SHR", "SHL", "RCR", "RCL", "SAR", "SAL", "REV", "ZEROX", "SIGNX", "SPLITB", "MERGEB"],
      "count": 13
    },
    "branch-jump": {
      "description": "Program flow control",
      "instructions": ["JMP", "CALL", "RET", "CALLA", "RETA", "CALLB", "RETB", "DJZ", "DJNZ", "TJZ", "TJNZ", "TJF", "TJNF", "TJS", "TJNS", "TJV", "SKIP", "SKIPF", "EXECF"],
      "count": 19
    },
    "hub-memory": {
      "description": "Hub memory access",
      "instructions": ["RDBYTE", "RDWORD", "RDLONG", "WRBYTE", "WRWORD", "WRLONG", "RDLUT", "WRLUT", "SETQ", "SETQ2", "WMLONG"],
      "count": 11
    },
    "smart-pins": {
      "description": "Smart pin configuration and control",
      "instructions": ["WRPIN", "WXPIN", "WYPIN", "RDPIN", "RQPIN", "AKPIN", "TESTP", "TESTPN", "SETDACS"],
      "count": 9
    },
    "events": {
      "description": "Event system operations",
      "instructions": ["SETSE1", "SETSE2", "SETSE3", "SETSE4", "SETPAT", "ADDCT1", "ADDCT2", "ADDCT3", "POLLINT", "POLLCT1", "POLLCT2", "POLLCT3", "POLLSE1", "POLLSE2", "POLLSE3", "POLLSE4", "POLLPAT", "POLLQMT", "WAITX", "GETCT", "GETBRK", "BRKINIT"],
      "count": 22
    }
  },
  "notes": [
    "All instructions support conditional execution with IF_ prefixes",
    "Timing varies based on execution location (COG/LUT/HUB)",
    "Many instructions support optional flag writing with WC, WZ modifiers",
    "This reference includes representative examples from each category",
    "Complete instruction set contains 491 total instructions including variants"
  ]
}